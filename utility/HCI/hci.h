
#ifndef __HCI_CMDS_H
#define __HCI_CMDS_H

#include <stdint-gcc.h>

/*
The HCI supports four types of packets:
Command Packet,
Asynchronous Data Packet,
Synchronous Data Packet,
Event Packet.

The packet type is a one byte value that precedes the HCI packet.
The packet type has the following value
*/
#define HCI_COMMAND             0x01
#define HCI_ASYNCHRONOUS_DATA   0x02
#define HCI_SYNCHRONOUS_DATA    0x03
#define HCI_EVENT               0x04
//--------------------------------------------------------------------------------------

/*
HCI events use an 8-bit event code.
All event codes are unique for BT and BLE.
Only event code 255 is reserved for vendor specific events.
There is only one event code for all LE events.
The first event parameter is used as the subevent code to distinguish the LE event types.
The following table lists all the BLE events and their event codes,
and subevent codes when applicable:
*/
//LE Events Event Code
#define EV_LE_Event_Code                            0x3E
#define Ev_Vendor_Specific                          0xFF

//Subevent Code
#define EV_LE_Connection_Complete                   0x01
#define EV_LE_Advertising_Report                    0x02
#define EV_LE_Connection_Update_Complete            0x03
#define EV_LE_Read_Remote_Used_Features_Complete    0x04
#define EV_LE_Long_Term_Key_Requested               0x05

//BT Events Event Code
#define EV_Disconnection_Complete                   0x05
#define EV_Encryption_Change                        0x08
#define EV_Read_Remote_Version_Information_Complete 0x0C
#define EV_Command_Complete                         0x0E
#define EV_Command_Status                           0x0F
#define EV_Hardware_Error                           0x10  // (optional)
#define EV_Number_Of_Completed_Packets              0x13
#define EV_Data_Buffer_Overflow                     0x1A
#define EV_Encryption_Key_Refresh_Complete          0x30
//--------------------------------------------------------------------------------------

/*
Host Error Codes
This section lists the various possible error codes generated by the Host.
If an HCI extension command that sent a Command Status with the error code ‘SUCCESS’
before processing may find an error during execution then the error is reported
in the normal completion command for the original command.

The error code 0x00 means SUCCESS. The possible range of failure error codes is 0x01-0xFF.
The table below provides an error code description for each failure error code.
*/
#define bleIncorrectMode 0x12
#define bleMemAllocError 0x13
#define bleNotConnected 0x14
#define bleNoResources 0x15
#define blePending 0x16
#define bleTimeout 0x17
#define bleInvalidRange 0x18
#define bleLinkEncrypted 0x19
#define bleProcedureComplete 0x1A
#define bleGAPUserCanceled 0x30
#define bleGAPConnNotAcceptable 0x31
#define bleGAPBondRejected 0x32
#define bleInvalidPDU 0x40
#define bleInsufficientAuthen 0x41
#define bleInsufficientEncrypt 0x42
#define bleInsufficientKeySize 0x43
#define INVALID_TASK_ID 0xFF


#endif

